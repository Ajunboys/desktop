/*
 * Syncany, www.syncany.org
 * Copyright (C) 2012 Maurus Cuelenaere<mcuelenaere@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.stacksync.desktop.connection.plugins.dropbox;

import java.awt.Desktop;
import java.net.URI;
import com.stacksync.desktop.connection.plugins.ConfigPanel;
import com.stacksync.desktop.connection.plugins.dropbox.DropboxConnection.DropboxAuthentication;
import com.stacksync.desktop.gui.error.ErrorMessage;

/**
 * @author Maurus Cuelenaere <mcuelenaere@gmail.com>
 */
public class DropboxConfigPanel extends ConfigPanel {
    private DropboxAuthentication pendingAuthentication;

    public DropboxConfigPanel(DropboxConnection connection) {
        super(connection);
	    initComponents();
    }

    @Override
    public void load() {
        if (getConnection().isAuthenticated()) {
            lblStatus.setText(resourceBundle.getString("dropbox_auth_success"));
            btnAuthenticate.setText(resourceBundle.getString("dropbox_btn_reauthenticate"));
        } else {
            lblStatus.setText(resourceBundle.getString("dropbox_begin_auth"));
            btnAuthenticate.setText(resourceBundle.getString("dropbox_btn_authenticate"));
        }
    }

    @Override
    public void save() {
        // do nothing
    }

    @Override
    public DropboxConnection getConnection() {
        return (DropboxConnection) super.getConnection();
    }       

    private void browseUrl(String url) {
        try {
            Desktop.getDesktop().browse(new URI(url));
        } catch (Exception ex) {
            // fallback
            ErrorMessage.showMessage(this, "Error", resourceBundle.getString("dropbox_browse_url") + " - " + ex.getMessage());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        btnAuthenticate = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStatus.setText(resourceBundle.getString("dropbox_begin_auth"));
        lblStatus.setName("lblStatus"); // NOI18N
        add(lblStatus);

        btnAuthenticate.setText(resourceBundle.getString("dropbox_btn_authenticate"));
        btnAuthenticate.setName("btnAuthenticate"); // NOI18N
        btnAuthenticate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAuthenticateActionPerformed(evt);
            }
        });
        add(btnAuthenticate);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAuthenticateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAuthenticateActionPerformed
        if (pendingAuthentication != null) {
            boolean result = pendingAuthentication.complete();
            pendingAuthentication = null;

            if (result) {
                btnAuthenticate.setText(resourceBundle.getString("dropbox_btn_reauthenticate"));
                lblStatus.setText(resourceBundle.getString("dropbox_auth_success"));
            } else {
                btnAuthenticate.setText(resourceBundle.getString("dropbox_btn_authenticate"));
                lblStatus.setText(resourceBundle.getString("dropbox_auth_fail"));
            }
        } else {
            pendingAuthentication = getConnection().authenticate();

            browseUrl(pendingAuthentication.getUrl());

            lblStatus.setText(resourceBundle.getString("dropbox_awaiting_auth"));
            btnAuthenticate.setText(resourceBundle.getString("dropbox_btn_complete_authentication"));
        }
    }//GEN-LAST:event_btnAuthenticateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAuthenticate;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables

    @Override
    public void clean() {    }
    
    @Override
    public boolean check() {        
        return true;
    }
}